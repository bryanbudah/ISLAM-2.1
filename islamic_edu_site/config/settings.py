"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.4.
"""
import environ
import os
from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    DEBUG=(bool, False)
)
DATABASES = {
    'default': env.db(default=f"sqlite:///{os.path.join(BASE_DIR, 'db.sqlite3')}")
}
# reading .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Django settings
DEBUG = env('DEBUG')
SECRET_KEY = env('SECRET_KEY')
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')

DATABASES = {
    'default': env.db(),  # Reads DATABASE_URL automatically
}

# Build paths
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY", "change-me-in-production")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

APPEND_SLASH = True

# Allowed hosts for local, custom domain, and Vercel
ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    'myislamicsite.com',
    'www.myislamicsite.com',
    'yourproject.vercel.app',
    '.vercel.app',
    '.now.sh',
]

# Installed apps
INSTALLED_APPS = [
    # Django core
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party
    'tailwind',
    'django_extensions',

    # Local apps
    'theme',
    'users',
    'content',
    'core.apps.CoreConfig',
     'cloudinary',
    'cloudinary_storage',
]
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': os.getenv('CLOUDINARY_CLOUD_NAME'),
    'API_KEY': os.getenv('CLOUDINARY_API_KEY'),
    'API_SECRET': os.getenv('CLOUDINARY_API_SECRET'),
}
# Custom user model
AUTH_USER_MODEL = 'users.CustomUser'

# Tailwind configuration
TAILWIND_APP_NAME = 'theme'

# Authentication settings
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = "home" 



# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Static file serving in production
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Root URL configuration
ROOT_URLCONF = 'config.urls'

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],  # Your templates folder
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # Required for auth in templates
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI / ASGI
WSGI_APPLICATION = 'config.wsgi.application'
ASGI_APPLICATION = 'config.asgi.application'

# Database (SQLite for now)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static & Media files
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']  # Dev static files
STATIC_ROOT = BASE_DIR / 'staticfiles'    # Production static files
# Enable WhiteNoise compression and caching
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# settings.py

if DEBUG:
    # Larger limits for development
    DATA_UPLOAD_MAX_MEMORY_SIZE = 26214400  # 25 MB
    FILE_UPLOAD_MAX_MEMORY_SIZE = 26214400  # 25 MB
else:
    # Smaller, more restrictive limits for production
    DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10 MB
    FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10 MB
DEFAULT_FROM_EMAIL = "kariukibryan6@gmail.com"

# ✅ Email backend (for sending emails)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

# ✅ Gmail SMTP configuration
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "illhubacademy@gmail.com"
EMAIL_HOST_PASSWORD = "nkcn jzaa hxuu dgda"